{"version":3,"sources":["../../src/decorators/circular-component.decorator.js"],"names":["CircularComponent","config","component","attributes","attachShadow","mode","build","attr","oldValue","newValue","Object","keys","findIndex","a","template","document","createElement","innerHTML","templateUrl","templation","compiler","compile","shadowRoot","render","styles","styleUrl","stylesNode","innerText","appendChild","customElements","define","selector"],"mappings":";;;;;;;;QAQgBA,iB,GAAAA,iB;;AAPhB;;;;;;;;;;;;;;oDADA;;AAGA;;;;;AAKO,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC;AACzC,QAAO,UAASC,SAAT,EAAoB;AAC1B;AAD0B,MAEpBF,iBAFoB;AAAA;;AAAA;AAAA;;AAGzB;AAHyB,wBAIO;AAAE,YAAOC,OAAOE,UAAP,IAAqB,EAA5B;AAAiC;;AAEnE;;AANyB;;AAOzB,gCAAc;AAAA;;AAIb;AAJa;AACb;;;AAIA,UAAKC,YAAL,CAAkB,EAAEC,MAAM,MAAR,EAAlB;;AAEA;AACA,UAAKH,SAAL,GAAiB,IAAIA,SAAJ,EAAjB;AACA,UAAKI,KAAL;AATa;AAUb;;AAED;;;AAnByB;AAAA;AAAA,6CAoBAC,IApBA,EAoBMC,QApBN,EAoBgBC,QApBhB,EAoB0B;AAClD;AACA,SAAIC,OAAOC,IAAP,CAAY,KAAKT,SAAjB,EAA4BU,SAA5B,CAAsC;AAAA,aAAKC,MAAMN,IAAX;AAAA,MAAtC,IAAyD,CAAC,CAA9D,EAAiE;AAChE,WAAKL,SAAL,CAAeK,IAAf,IAAuBE,QAAvB;AACA;AACD;;AAED;;AA3ByB;AAAA;AAAA,4BA4BjB;AACP;AACA,SAAIK,WAAWC,SAASC,aAAT,CAAuB,UAAvB,CAAf;;AAEA;AACA,SAAIf,OAAOa,QAAP,IAAmBb,OAAOa,QAAP,KAAoB,IAA3C,EAAiD;AAChDA,eAASG,SAAT,GAAqBhB,OAAOa,QAA5B;AACA,MAFD,MAEO,IAAIb,OAAOiB,WAAP,IAAsBjB,OAAOiB,WAAP,KAAuB,IAAjD,EAAuD;AAC7DJ,eAASG,SAAT,GAAqBhB,OAAOiB,WAA5B;AACA,MAFM,MAEA;AACN,YAAM,qCAAN;AACA;;AAED;AACA,SAAIC,aAAa,4BAAjB;AACA,SAAIC,WAAWD,WAAWE,OAAX,CAAmB,KAAKC,UAAxB,EAAoCR,QAApC,EAA8C,KAAKZ,SAAnD,CAAf;AACAkB,cAASG,MAAT;;AAEA;AACA,SAAIC,SAAS,IAAb;AACA,SAAIvB,OAAOuB,MAAP,IAAiBvB,OAAOuB,MAAP,KAAkB,IAAvC,EAA6C;AAC5CA,eAASvB,OAAOuB,MAAhB;AACA,MAFD,MAEO,IAAIvB,OAAOwB,QAAP,IAAmBxB,OAAOwB,QAAP,KAAoB,IAA3C,EAAiD;AACvDD,eAASvB,OAAOwB,QAAhB;AACA;AACD,SAAID,WAAW,IAAf,EAAqB;AACpB;AACA,UAAIE,aAAaX,SAASC,aAAT,CAAuB,OAAvB,CAAjB;AACAU,iBAAWC,SAAX,GAAuBH,MAAvB;AACA,WAAKF,UAAL,CAAgBM,WAAhB,CAA4BF,UAA5B;AACA;AACD;AA3DwB;;AAAA;AAAA;;AA8D1B;;;AACAG,iBAAeC,MAAf,CAAsB7B,OAAO8B,QAA7B,EAAuC/B,iBAAvC;AACA,EAhED;AAiEA","file":"circular-component.decorator.js","sourcesContent":["/** import Templation */\nimport { Templation } from '@circular/templation';\n\n/**\n * CircularComponent\n * A decorator that will create a new web component and attach the component class to it\n * @param {object} config The component configuration object\n */\nexport function CircularComponent(config) {\n\treturn function(component) {\n\t\t/** create a CircularComponent class that extends the HTMLElement */\n\t\tclass CircularComponent extends HTMLElement {\n\t\t\t/** static array of observed attributes */\n\t\t\tstatic get observedAttributes() { return config.attributes || []; }\n\n\t\t\t/** constructor */\n\t\t\tconstructor() {\n\t\t\t\t/** initialize the HTMLElement base class */\n\t\t\t\tsuper();\n\n\t\t\t\t/** attach the shadown dom */\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\n\t\t\t\t/** initialize the component and build */\n\t\t\t\tthis.component = new component();\n\t\t\t\tthis.build();\n\t\t\t}\n\n\t\t\t/** respond to attribute changes */\n\t\t\tattributeChangedCallback(attr, oldValue, newValue) {\n\t\t\t\t/** check if the attribute exists on the component and update */\n\t\t\t\tif (Object.keys(this.component).findIndex(a => a === attr) > -1) {\n\t\t\t\t\tthis.component[attr] = newValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** build the component */\n\t\t\tbuild() {\n\t\t\t\t/** build the template */\n\t\t\t\tlet template = document.createElement('template');\n\t\t\t\t\n\t\t\t\t/** set the template */\n\t\t\t\tif (config.template && config.template !== null) {\n\t\t\t\t\ttemplate.innerHTML = config.template;\n\t\t\t\t} else if (config.templateUrl && config.templateUrl !== null) {\n\t\t\t\t\ttemplate.innerHTML = config.templateUrl;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'No template specified for component';\n\t\t\t\t}\n\n\t\t\t\t/** run the templation engine */\n\t\t\t\tlet templation = new Templation();\n\t\t\t\tlet compiler = templation.compile(this.shadowRoot, template, this.component);\n\t\t\t\tcompiler.render();\n\n\t\t\t\t/** set styles */\n\t\t\t\tlet styles = null;\n\t\t\t\tif (config.styles && config.styles !== null) {\n\t\t\t\t\tstyles = config.styles;\n\t\t\t\t} else if (config.styleUrl && config.styleUrl !== null) {\n\t\t\t\t\tstyles = config.styleUrl;\n\t\t\t\t}\n\t\t\t\tif (styles !== null) {\n\t\t\t\t\t/** create the styles node and attach to shadowRoot */\n\t\t\t\t\tlet stylesNode = document.createElement('style');\n\t\t\t\t\tstylesNode.innerText = styles;\n\t\t\t\t\tthis.shadowRoot.appendChild(stylesNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** register the custom component */\n\t\tcustomElements.define(config.selector, CircularComponent);\n\t}\n}"]}